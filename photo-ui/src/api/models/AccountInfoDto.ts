/* tslint:disable */
/* eslint-disable */
/**
 * PhotoOrganizer API
 * PhotoOrganizer image organizer
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Account information
 * @export
 * @interface AccountInfoDto
 */
export interface AccountInfoDto {
    /**
     * Email address
     * @type {string}
     * @memberof AccountInfoDto
     */
    email: string;
    /**
     * Password. Only used when creating or updating a user. Never returned from the server. Leave blank when updating a user to keep the existing password.
     * @type {string}
     * @memberof AccountInfoDto
     */
    password?: string;
    /**
     * Username used to log in
     * @type {string}
     * @memberof AccountInfoDto
     */
    username: string;
    /**
     * users firstname
     * @type {string}
     * @memberof AccountInfoDto
     */
    firstName?: string | null;
    /**
     * users surname
     * @type {string}
     * @memberof AccountInfoDto
     */
    lastName?: string | null;
    /**
     * Assigned Roles
     * @type {Set<string>}
     * @memberof AccountInfoDto
     */
    roles: Set<string> | null;
}

/**
 * Check if a given object implements the AccountInfoDto interface.
 */
export function instanceOfAccountInfoDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "roles" in value;

    return isInstance;
}

export function AccountInfoDtoFromJSON(json: any): AccountInfoDto {
    return AccountInfoDtoFromJSONTyped(json, false);
}

export function AccountInfoDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountInfoDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': json['email'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'username': json['username'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'roles': json['roles'],
    };
}

export function AccountInfoDtoToJSON(value?: AccountInfoDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'password': value.password,
        'username': value.username,
        'firstName': value.firstName,
        'lastName': value.lastName,
        'roles': value.roles === null ? null : Array.from(value.roles as Set<any>),
    };
}

