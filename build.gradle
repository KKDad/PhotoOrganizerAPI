plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.coditory.integration-test' version '1.3.0'
    id "com.bmuschko.docker-remote-api" version "7.2.0"
}

ext {
    // Organized alphabetically - Please keep it that way!
    assertjVersion = "3.17.2"
    commonsCliVersion = '1.4'
    dropwizardMetricsServletsVersion = '4.1.12'
    dropwizardSwaggerVersion = '2.0.12-1'
    dropwizardVersion = '2.0.28'
    elasticsearchVersion = '7.16.3'
    gsonVersion = '2.8.9'
    h2Version = '1.4.200'
    hamcrestVersion = '1.3'
    janinoVersion = '3.1.2'
    jnaVersion = "5.10.0"
    jsonVersion = '20211205'
    junitJupiterVersion = '5.8.2'
    liquibaseVersion = "3.10.0"
    log4jVersion="2.17.0"
    mockitoVersion = '4.2.0'
    reflectionsVersion = '0.9.12'
    sseVersion = "2.31"
}

subprojects {
    apply plugin: 'java'

    // Load our version number from the version.properties file.
    def propFile = file('../version.properties')
    if (propFile.canRead()){
        Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props!=null && props.containsKey('PHOTO_ORGANIZER_VERSION'))
            version = props['PHOTO_ORGANIZER_VERSION']
        else
            throw new GradleException('version.properties cannot be loaded or is missing key: PHOTO_ORGANIZER_VERSION')
    } else {
        throw new GradleException('version.properties cannot be read')
    }
    logger.warn "Building version: " + version
    group = 'org.stapledon.photo'

    sourceCompatibility = '1.11'
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Test) {
        useJUnitPlatform()
    }
}
